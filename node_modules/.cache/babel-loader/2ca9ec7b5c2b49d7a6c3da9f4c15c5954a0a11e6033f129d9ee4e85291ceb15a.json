{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://127.0.0.1:5000';\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  timeout: 10000 // adjust as needed\n});\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  const user = localStorage.getItem('user');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  if (user) {\n    config.headers['User-Info'] = user; // Add user information to headers\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const registerUser = userData => {\n  return axiosInstance.post('/register', userData);\n};\nexport const loginUser = async userData => {\n  try {\n    const response = await axiosInstance.post('/login', userData);\n    console.log(\"API login response:\", response.data); // Tambahkan log\n    localStorage.setItem('token', response.data.access_token);\n    if (response.data.user) {\n      localStorage.setItem('user', JSON.stringify(response.data.user));\n      localStorage.setItem('user_id', response.data.user.user_id); // Set user_id in localStorage\n    } else {\n      localStorage.removeItem('user');\n      localStorage.removeItem('user_id'); // Remove user_id from localStorage\n    }\n    return response;\n  } catch (error) {\n    console.error(\"API login error:\", error);\n    throw error;\n  }\n};\nexport const logoutUser = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user'); // Remove user data\n  localStorage.removeItem('user_id'); // Remove user_id\n  return axiosInstance.post('/logout');\n};\nexport const createEvent = async eventData => {\n  try {\n    const response = await axiosInstance.post('/events', eventData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating event:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const getEvents = async () => {\n  const response = await axiosInstance.get('/events');\n  return response.data;\n};\nexport const createNote = async noteData => {\n  try {\n    const response = await axiosInstance.post('/notes', noteData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating note:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const getNotes = async () => {\n  const response = await axiosInstance.get('/notes');\n  return response.data;\n};\nexport const createReview = async noteData => {\n  try {\n    const response = await axiosInstance.post('/notes', noteData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating note:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const getReviews = async () => {\n  const response = await axiosInstance.get('/reviewa');\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","axiosInstance","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","user","headers","Authorization","error","Promise","reject","registerUser","userData","post","loginUser","response","console","log","data","setItem","access_token","JSON","stringify","user_id","removeItem","logoutUser","createEvent","eventData","message","getEvents","get","createNote","noteData","getNotes","createReview","getReviews"],"sources":["D:/Semester 4/Web Lanjutan/calenderweb/src/services/Api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://127.0.0.1:5000';\n\nconst axiosInstance = axios.create({\n  baseURL: API_URL,\n  timeout: 10000, // adjust as needed\n});\n\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    \n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    if (user) {\n      config.headers['User-Info'] = user; // Add user information to headers\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport const registerUser = (userData) => {\n  return axiosInstance.post('/register', userData);\n};\n\nexport const loginUser = async (userData) => {\n  try {\n    const response = await axiosInstance.post('/login', userData);\n    console.log(\"API login response:\", response.data); // Tambahkan log\n    localStorage.setItem('token', response.data.access_token);\n    \n    if (response.data.user) {\n        localStorage.setItem('user', JSON.stringify(response.data.user));\n        localStorage.setItem('user_id', response.data.user.user_id); // Set user_id in localStorage\n    } else {\n        localStorage.removeItem('user');\n        localStorage.removeItem('user_id'); // Remove user_id from localStorage\n    }\n\n    return response;\n  } catch (error) {\n    console.error(\"API login error:\", error);\n    throw error;\n  }\n};\n\n\nexport const logoutUser = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user'); // Remove user data\n  localStorage.removeItem('user_id'); // Remove user_id\n  return axiosInstance.post('/logout');\n};\n\nexport const createEvent = async (eventData) => {\n  try {\n    const response = await axiosInstance.post('/events', eventData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating event:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\nexport const getEvents = async () => {\n  const response = await axiosInstance.get('/events');\n  return response.data;\n};\n\nexport const createNote = async (noteData) => {\n  try {\n    const response = await axiosInstance.post('/notes', noteData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating note:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\nexport const getNotes = async () => {\n  const response = await axiosInstance.get('/notes');\n  return response.data;\n};\n\nexport const createReview = async (noteData) => {\n  try {\n    const response = await axiosInstance.post('/notes', noteData);\n    return response.data;\n  } catch (error) {\n    console.error('Error creating note:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\nexport const getReviews = async () => {\n  const response = await axiosInstance.get('/reviewa');\n  return response.data;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}